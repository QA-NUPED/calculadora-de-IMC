{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;AAAA,SAAgB,YAAY,CAAC,MAAc,EAAE,MAAc;IACvD,IAAM,MAAM,GAAG,MAAM,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IAC1C,OAAO,MAAM,CAAC;AAChB,CAAC;AAHH,oCAGG;;;;;;;;;;;;;;ACHH,SAAgB,cAAc,CAAC,GAAW;IACtC,IAAM,GAAG,GAAG,CAAE,gBAAgB,EAAE,aAAa,EAAE,WAAW,CAAC;IAE3D,IAAI,GAAG,IAAI,KAAK;QAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3B,IAAI,GAAG,IAAI,KAAK;QAAE,OAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;SACjC,IAAI,GAAG,IAAI,KAAK;QAAE,OAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEpC,OAAO,OAAO,CAAC;AACnB,CAAC;AARH,wCAQG;;;;;;;UCRH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,qFAA6C;AAC7C,4EAA4C;AAE5C,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC5C,IAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAsB,CAAC;IAClF,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAqB,CAAC;IAC1E,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAqB,CAAC;IAC1E,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAqB,CAAC;IAExE,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE;QACxC,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzC,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;QAE/C,IAAM,GAAG,GAAG,0BAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACzC,IAAM,QAAQ,GAAG,yBAAc,CAAC,GAAG,CAAC,CAAC;QAErC,SAAS,CAAC,WAAW,GAAG,oBAAa,GAAG,CAAC,OAAO,CAC9C,CAAC,CACF,qBAAgB,QAAU,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sources":["webpack://typescript-jest-test/./src/calculation.ts","webpack://typescript-jest-test/./src/levelBMI.ts","webpack://typescript-jest-test/webpack/bootstrap","webpack://typescript-jest-test/./src/script.ts"],"sourcesContent":["export function calculateBMI(weight: number, height: number): number {\r\n    const result = weight / (height * height);\r\n    return result;\r\n  }","export function getBMICategory(bmi: number) {\r\n    const IMC = [ \"Abaixo do Peso\", \"Peso Normal\", \"Sobrepeso\"]\r\n  \r\n    if (bmi <= 18.59) return IMC[0];\r\n    else if (bmi <= 24.99) return  IMC[1];\r\n    else if (bmi <= 29.99) return  IMC[2];\r\n    else \r\n      return \"Obeso\";\r\n  }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { calculateBMI } from './calculation';\r\nimport { getBMICategory } from './levelBMI';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const calculateButton = document.getElementById('calculate',) as HTMLInputElement;\r\n  const weightInput = document.getElementById('weight') as HTMLInputElement;\r\n  const heightInput = document.getElementById('height') as HTMLInputElement;\r\n  const resultDiv = document.getElementById('result') as HTMLInputElement;\r\n\r\n  calculateButton.addEventListener('click', () => {\r\n    const weight = Number(weightInput.value);\r\n    const height = Number(heightInput.value) / 100; // Convert cm to meters\r\n\r\n    const bmi = calculateBMI(weight, height);\r\n    const category = getBMICategory(bmi);\r\n\r\n    resultDiv.textContent = `Seu IMC Ã© ${bmi.toFixed(\r\n      2,\r\n    )}. Categoria: ${category}`;\r\n  });\r\n});\r\n"],"names":[],"sourceRoot":""}